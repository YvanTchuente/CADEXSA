{"version":3,"sources":["index.js","classes/carousel.js","classes/countdown.js","classes/date_diff.js","functions/header.js","functions/nice-select.js","functions/profile.js","functions/random.js","functions/validation.js"],"names":[],"mappingsgvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzvrfile":"main.js","sourcesContent":["const pathname = window.location.pathname; // Location of the executing script\r\nconst path_to_signup = new RegExp(\"^\\/members/register\\.(html|php)+$\");\r\nconst path_to_profile = new RegExp(\"^\\/members\\/profile\\.(html|php)+\\?\\w*$\");\r\nconst sticky_header_enabled_pages = [\"/\",\"/news/\",\"/events/\",\"/gallery/\",\"/about_us/\",\"/contact_us/\"];\r\n\r\ndocument.onreadystatechange = function() \r\n{\r\n\tconst loader = document.querySelector(\"#loader\");\r\n\tif (document.readyState == \"complete\") {\r\n\t\ttry {\r\n\t\t\tfadeOut(loader,500);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nwindow.onload = function() \r\n{\t\r\n\t/* Event Handler for clicks on empty sections of main page */\r\n\twindow.addEventListener(\"click\", event => {\r\n\t\tif(document.querySelector(\".dropbtn\"))\r\n\t\t{\r\n\t\t\tif (!event.target.matches('.dropbtn')) \r\n\t\t\t{\r\n\t\t\t\tconst dropdown = document.querySelector(\".user-panel .dropdown\");\r\n\t\t\t\tdropdown.style = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(document.querySelectorAll(\".nice-select\"))\r\n\t\t{\r\n\t\t\tif(!event.target.matches('.nice-select .current'))\r\n\t\t\t{\r\n\t\t\t\tconst dropdowns = document.querySelectorAll(\".dropdown\");\r\n\t\t\t\tfor (dropdown of dropdowns) \r\n\t\t\t\t{\r\n\t\t\t\t\tdropdown.classList.remove(\"opened\");\r\n\t\t\t\t}\r\n\t\t\t\tconst currents = document.querySelectorAll(\".nice-select > span\");\r\n\t\t\t\tfor (icon of currents)\r\n\t\t\t\t{\r\n\t\t\t\t\ticon.classList.remove(\"opened\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t/* Always display User panel */\r\n\tlet userPanel;\r\n\tif (userPanel = document.querySelector(\".user-panel\")) {\r\n\t\tdocument.getElementById(\"topnav\").style.display = \"block\";\r\n\t\tif (window.matchMedia(\"screen and (max-width: 992px)\").matches) {\r\n\t\t\tdocument.getElementById(\"contact-us\").style.display = \"none\";\r\n\t\t}\r\n\t\twindow.matchMedia(\"screen and (max-width: 992px)\").onchange = (event) => {\r\n\t\t\tif(event.matches)\r\n\t\t\t\tdocument.getElementById(\"contact-us\").style.display = \"none\";\r\n\t\t\telse \r\n\t\t\t\tdocument.getElementById(\"contact-us\").style.display = \"flex\";\r\n\t\t}\r\n\t}\r\n\r\n\t/* Main page Counters JS functions */\r\n\tconst counters = document.querySelectorAll(\".counter\");\r\n\tconst regexp = new RegExp(\"\\/about_us$\");\r\n\tlet offset = 1700;\r\n\tif(regexp.test(pathname)) offset = 400; \r\n\r\n\t/* Event handler for page scrolls */\r\n\twindow.addEventListener(\"scroll\", () => {\r\n\t\tif (window.scrollY >= offset) {\r\n\t\t\tconst speed = 500;\r\n\t\t\tcounters.forEach(counter => {\r\n\t\t\t\tconst updateCount = () => {\r\n\t\t\t\t\tconst target = +counter.getAttribute('data-target');\r\n\t\t\t\t\tconst count = +counter.innerText\r\n\t\r\n\t\t\t\t\tconst increment = target / speed;\r\n\t\r\n\t\t\t\t\tif (count < target) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcounter.innerText = Math.ceil(count + increment);\r\n\t\t\t\t\t\tsetTimeout(updateCount, 1)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcount.innerText = target;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdateCount();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif(sticky_header_enabled_pages.includes(pathname)) sticky_header();\r\n\t})\r\n\r\n\t// Append an event listener to the goto top button\r\n\tconst gotop_btn = document.getElementById(\"gotop_btn\");\r\n\tgotop_btn.addEventListener(\"click\", () => gotop())\r\n\r\n\t// Append an event listener to the menu wrapper\r\n\tconst main_menu_btn = document.querySelector(\"header div.menu-wrapper\");\r\n\tmain_menu_btn.addEventListener(\"click\", () => drop_menu())\r\n\r\n\t// Display user panel when a user is logged in\r\n\tconst dropbtn = document.querySelector(\".dropbtn\");\r\n\tif(dropbtn) {\r\n\t\tdropbtn.onclick = () => {\r\n\t\t\tconst dropdown = document.querySelector(\".user-panel .dropdown\");\r\n\t\t\tdropdown.style.top = \"100%\";\r\n\t\t\tdropdown.style.opacity = \"1\";\r\n\t\t\tdropdown.style.visibility = \"visible\";\r\n\t\t}\r\n\t}\r\n\r\n\t// Selection of option for the select elements of the nice-selects\r\n\tconst nice_select_options = document.querySelectorAll(\".nice-select .dropdown li\");\r\n\tfor (const select_option of nice_select_options) {\r\n\t\t// Attaches an event handler to each nice-select list item\r\n\t\tselect_option.addEventListener(\"click\", event => {\r\n\t\t\tconst target = event.target;\r\n\t\t\tconst value = target.innerText;\r\n\t\t\tconst parent = target.parentElement;\r\n\r\n\t\t\t// Removes class 'selected' from all list items and the class atrribute itself\r\n\t\t\tfor (const item of parent.children) {\r\n\t\t\t\titem.classList.remove(\"selected\");\r\n\t\t\t\titem.removeAttribute(\"class\");\r\n\t\t\t}\r\n\t\t\t// Adds the class 'selected' to the target\r\n\t\t\ttarget.classList.add(\"selected\"); \r\n\t\t\t// Selects the 'current' element and update its content\r\n\t\t\tconst current = target.parentElement.previousElementSibling; \r\n\t\t\tcurrent.innerText = value;\r\n\t\t\t// Select the 'select' element\r\n\t\t\tconst select = target.parentElement.nextElementSibling;\r\n\t\t\tfor (const option of select.children)\r\n\t\t\t{\r\n\t\t\t\toption.removeAttribute(\"selected\");\r\n\t\t\t\tif(option.innerText === value) {\r\n\t\t\t\t\toption.setAttribute(\"selected\",\"\");\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t})\r\n\t}\r\n\r\n\t/************************************************************************************\r\n\t *********      GENERAL FORM INPUTS EVENT LISTENERS      \t\t\t       **********\r\n\t ************************************************************************************/\r\n\r\n\t// Passwords\r\n\tlet passwords = document.querySelectorAll(\"input[type='password']\");\r\n\tfor (const password of passwords) {\r\n\t\tif(password.id === \"confirm-password\") continue;\r\n\t\tpassword.addEventListener(\"keyup\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tconst parent = target.parentElement;\r\n\t\t\tconst value = target.value;\r\n\r\n\t\t\tif(value) {\r\n\t\t\t\tevent.currentTarget.setAttribute(\"value\",value);\r\n\t\t\t\tif(path_to_signup.test(pathname)) {\r\n\t\t\t\t\tif(!validatePassword(value)) {\r\n\t\t\t\t\t\tif(!target.nextElementSibling.nextElementSibling) {\r\n\t\t\t\t\t\t\tconst msg = element(\"div\",\"error\",\"Password should contain a minimum of 8 characters\");\r\n\t\t\t\t\t\t\ttarget.style.borderColor = \"red\";\r\n\t\t\t\t\t\t\tparent.appendChild(msg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(target.nextElementSibling.nextElementSibling) {\r\n\t\t\t\t\t\t\tif(target.nextElementSibling.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\t\t\tparent.removeChild(target.nextElementSibling.nextElementSibling);\r\n\t\t\t\t\t\t\t\ttarget.style.borderColor = \"green\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttarget.removeAttribute(\"value\");\r\n\t\t\t\ttarget.removeAttribute(\"style\");\r\n\t\t\t\tif(target.nextElementSibling.nextElementSibling) {\r\n\t\t\t\t\tif(target.nextElementSibling.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\tparent.removeChild(target.nextElementSibling.nextElementSibling);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// Email inputs\r\n\tlet emails = document.querySelectorAll(\"input[type='email']\");\r\n\tfor (const email of emails) {\r\n\t\temail.addEventListener(\"keyup\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tconst parent = target.parentElement;\r\n\t\t\tconst value = target.value;\r\n\t\t\t\r\n\t\t\tif(value) {\r\n\t\t\t\t// If email input is not a real email address\r\n\t\t\t\tif(!validateEmail(value)) {\r\n\t\t\t\t\tif(!target.nextElementSibling) {\r\n\t\t\t\t\t\tconst msg = element(\"div\",\"error\",\"Invalid email address\");\r\n\t\t\t\t\t\ttarget.style.borderColor = \"red\";\r\n\t\t\t\t\t\tparent.appendChild(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else  { \r\n\t\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t\t\ttarget.style.borderColor = \"green\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t} else {\r\n\t\t\t\ttarget.removeAttribute(\"style\");\r\n\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t} \r\n\r\n\t// Phone numbers inputs\r\n\tconst phoneNumbers = document.querySelectorAll(\"input[type='number']#phoneNumber\");\r\n\tfor (const phoneNumber of phoneNumbers) {\r\n\t\tphoneNumber.addEventListener(\"keyup\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tconst parent = target.parentElement;\r\n\t\t\tconst value = target.value;\r\n\r\n\t\t\tif(value) {\r\n\t\t\t\tif(!validatePhone(value)) {\r\n\t\t\t\t\tif(!target.nextElementSibling) {\r\n\t\t\t\t\t\tconst msg = element(\"div\",\"error\",\"Invalid phone number\");\r\n\t\t\t\t\t\ttarget.style.borderColor = \"red\";\r\n\t\t\t\t\t\tparent.appendChild(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else  { \r\n\t\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t\t\ttarget.style.borderColor = \"green\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t} else {\r\n\t\t\t\ttarget.removeAttribute(\"style\");\r\n\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// Toggle visiblity button\r\n\tlet toggle_btns = document.getElementsByClassName(\"password-visibility-btn\");\r\n\tfor (const toggle_btn of toggle_btns) {\r\n\t\ttoggle_btn.addEventListener(\"click\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tconst icon = target.firstElementChild;\r\n\t\t\tconst input = target.previousElementSibling;\r\n\t\t\tconst type = input.getAttribute(\"type\");\r\n\r\n\t\t\tif(type === \"text\") {\r\n\t\t\t\tinput.setAttribute(\"type\",\"password\");\r\n\t\t\t\ticon.classList.remove(\"fa-eye-slash\");\r\n\t\t\t\ticon.classList.add(\"fa-eye\");\r\n\t\t\t} else {\r\n\t\t\t\tinput.setAttribute(\"type\",\"text\");\r\n\t\t\t\ticon.classList.remove(\"fa-eye\");\r\n\t\t\t\ticon.classList.add(\"fa-eye-slash\");\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// IF URL IS SET TO POINT PAGES CONATINING SIGN UP FORMS\r\n\tif(path_to_signup.test(pathname)) \r\n\t{\r\n\t\tconst countryInput = document.querySelector(\"input[type='text']#country\");\r\n\t\t// Country Input Event\r\n\t\tcountryInput.addEventListener(\"keyup\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tconst parent = target.parentElement;\r\n\t\t\tconst value = target.value;\r\n\t\t\tif(value) {\r\n\t\t\t\tif(!validateCountry(value)) {\r\n\t\t\t\t\tif(!target.nextElementSibling) {\r\n\t\t\t\t\t\tconst msg = element(\"div\",\"error\",\"Invalid country name\");\r\n\t\t\t\t\t\tparent.appendChild(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else  { \r\n\t\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t} else {\r\n\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst textarea = document.querySelector(\"textarea#aboutme\");\r\n\t\t// Sign up textarea: On Key up Event\r\n\t\ttextarea.addEventListener(\"keyup\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tconst parent = target.parentElement;\r\n\t\t\tconst value = target.value;\r\n\t\t\tif(value) {\r\n\t\t\t\tif(!validateTextArea(value)) {\r\n\t\t\t\t\tif(!target.nextElementSibling) {\r\n\t\t\t\t\t\tconst msg = element(\"div\",\"error\",\"Please provide a short description\");\r\n\t\t\t\t\t\tparent.appendChild(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else  { \r\n\t\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t} else {\r\n\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// Sign up textarea: On Change Event\r\n\t\ttextarea.addEventListener(\"change\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tconst parent = target.parentElement;\r\n\t\t\tconst value = target.value;\r\n\t\t\tif(value) {\r\n\t\t\t\tif(value.length < 50) {\r\n\t\t\t\t\tif(!target.nextElementSibling) {\r\n\t\t\t\t\t\tconst msg = element(\"div\",\"error\",\"Too scanty description\");\r\n\t\t\t\t\t\tparent.appendChild(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else  { \r\n\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t} else {\r\n\t\t\t\tif(target.nextElementSibling) {\r\n\t\t\t\t\tif(target.nextElementSibling.matches(\".error\")) {\r\n\t\t\t\t\t\tparent.removeChild(target.nextElementSibling);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tconst sign_up_forms = document.querySelectorAll(\"form.sign_up\");\r\n\t\tfor (const form of sign_up_forms) \r\n\t\t{\r\n\t\t\t// On SIGN UP form submit\r\n\t\t\tform.addEventListener(\"submit\", event => {\r\n\t\t\t\tconst target = event.currentTarget; \r\n\t\t\t\tlet firstElement;\r\n\t\t\t\tconst textInputs = Array.from(target.querySelectorAll(\"input[type='text']\"));\r\n\t\t\t\tif(target.id === \"register-form\") {\r\n\t\t\t\t\tconst passwords = Array.from(target.querySelectorAll(\"input[type='password']\"));\r\n\t\t\t\t\tfirstElement = target.querySelector(\"label[for='first-name']\");\r\n\t\t\t\t} else \r\n\t\t\t\t\tfirstElement = target.querySelector(\"div:first-child\");\r\n\t\t\t\tconst error_msgs = target.querySelectorAll(\"div.error\");\r\n\t\t\t\tlet error_msg, formdata;\r\n\t\t\t\tif(isset(passwords)) {\r\n\t\t\t\t\tformdata = {\r\n\t\t\t\t\t\ttextInputs: textInputs,\r\n\t\t\t\t\t\tpasswords: passwords\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tformdata = { textInputs: textInputs }\r\n\t\t\t\t}\r\n\t\t\t\tif(error_msgs.length == 0) {\r\n\t\t\t\t\tif(error_msg = validateSignUp(formdata,target.id)) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tlet i=1;\r\n\t\t\t\t\t\tfor (const msg of error_msg) {\r\n\t\t\t\t\t\t\tconst error = element(\"div\",\"error\",msg);\r\n\t\t\t\t\t\t\ttarget.insertBefore(error,firstElement);\r\n\t\t\t\t\t\t\terror.id = `error_${i}`;\r\n\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tfor(let j=1; j <= i; j++) {\r\n\t\t\t\t\t\t\t\tconst err_msg = target.querySelector(`div.error#error_${j}`);\r\n\t\t\t\t\t\t\t\ttarget.removeChild(err_msg);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\tgotop(); // Scroll page up to the top\r\n\t\t\t\t\t}\r\n\t\t\t\t} else event.preventDefault();\r\n\t\t\t})\r\n\t\t\t// On SIGN UP form change\r\n\t\t\tform.addEventListener(\"change\", event => {\r\n\t\t\t\tconst target = event.currentTarget;\r\n\t\t\t\tconst error_msgs = target.querySelectorAll(\"div.error\");\r\n\t\t\t\tconst submitBtn = target.querySelector(\"button.form-btn\");\r\n\t\t\t\tif(error_msgs.length > 0) { \r\n\t\t\t\t\tsubmitBtn.setAttribute(\"disabled\",\"true\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(submitBtn.getAttribute(\"disabled\")) {\r\n\t\t\t\t\t\tsubmitBtn.removeAttribute(\"disabled\");\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t// END\r\n\r\n\t/************************************************************************************\r\n\t *********      PROFILE PAGE INPUTS' EVENT LISTENERS      \t\t\t       **********\r\n\t ************************************************************************************/\r\n\t// IF URL IS SET TO POINT PROFILE PAGE\r\n\tif(path_to_profile.test(pathname)) {\r\n\t\tconst upload_form = document.getElementById(\"profile_picture\");\r\n\t\tconst input_picture = document.getElementById(\"input_picture\");\r\n\t\tconst input_text = document.getElementById(\"input_text\");\r\n\t\tconst preview = document.getElementById(\"picture_preview\");\r\n\t\tconst upload_btn = document.getElementById(\"upload_btn\");\r\n\t\tconst cancel_btn = document.getElementById(\"cancel_btn\");\r\n\t\tconst userid = document.getElementById(\"userid\");\r\n\t\tconst chat_msg = document.getElementById(\"chat_msg\");\r\n\t\tconst chats_menu_btn = document.querySelector(\"div.chatbox div.menu-wrapper\");\r\n\t\tconst updateProfileForm = document.getElementById(\"updateProfile\");\r\n\r\n\t\t/* Add an event listener to the menu button of the chat section */\r\n\t\tchats_menu_btn.addEventListener(\"click\", () => {\r\n\t\t\ttoggleOpen();\r\n\t\t})\r\n\r\n\t\tcancel_btn.addEventListener(\"click\", () => toggle_visibility(\"b1\"))\r\n\t\tchat_msg.addEventListener(\"focus\", () => typing(1))\r\n\t\tchat_msg.addEventListener(\"blur\", () => typing(0))\r\n\r\n\t\t// Read file immediated after its selection by the user\r\n\t\tinput_picture.addEventListener(\"change\", event => {\r\n\t\t\tconst target = event.currentTarget;\r\n\t\t\tinput_text.innerHTML = target.files[0].name;\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\r\n\t\t\treader.onloadstart = () => {\r\n\t\t\t\tfor (child of preview.childNodes)\r\n\t\t\t\t\tchild.remove();\r\n\t\t\r\n\t\t\t\tconst loading = element(\"span\",null,\"Loading thumbnail...\");\r\n\t\t\t\tloading.id = \"loading\";\r\n\t\t\t\tpreview.appendChild(loading);\r\n\t\t\t}\r\n\t\t\treader.onload = () => {\r\n\t\t\t\tconst loading = document.getElementById(\"loading\");\r\n\t\t\t\tconst img = document.createElement(\"img\");\r\n\t\t\t\timg.src = reader.result;\r\n\t\t\t\tpreview.replaceChild(img,loading);\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(target.files[0]);\r\n\t\t})\r\n\r\n\t\tupload_btn.addEventListener(\"event\",() => {\r\n\t\t\tif (isset(input_text.innerHTML)) {\r\n\t\t\t\tconst form = new FormData(upload_form);\r\n\t\t\t\tconst request = new Request(\"ProfilePicture.php\",{\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: { 'Content-Type': 'multipart/form-data' },\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tcredentials: 'same-origin',\r\n\t\t\t\t\tbody: form\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Uploads the file\r\n\t\t\t\tfetch(request)\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tif(!response.ok) \r\n\t\t\t\t\t\t\tthrow new Error(\"Network operation failed\")\r\n\t\t\t\t\t\treturn response.text();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(text => {\r\n\t\t\t\t\t\tcancel_btn.click();\r\n\t\t\t\t\t\tsetTimeout(refresh_picture(userid.getAttribute(\"value\")),2000);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(reason => alert(reason));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tupdateProfileForm.addEventListener(\"submit\",event => updateProfile(event,updateProfileForm))\r\n\t}\r\n\t// END\r\n\r\n\t/* Accordions */\r\n\tconst accordions = document.querySelectorAll(\".accordion\");\r\n\tfor (const accordion of accordions) {\r\n\t\tconst icon = accordion.children[0].children[0];\r\n\r\n\t\taccordion.addEventListener(\"click\", event => {\r\n\t\t\tif(!(event.currentTarget.classList.contains(\"open\")))\r\n\t\t\t{ \r\n\t\t\t\ticon.style.transform = \"rotate(180deg)\";\r\n\t\t\t\taccordion.classList.add(\"open\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ticon.removeAttribute(\"style\");\r\n\t\t\t\taccordion.classList.remove(\"open\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstart_carousels();\r\n\tstart_countdowns();\r\n}","/**\r\n * Carousel Class\r\n */\r\n\r\n// Constants\r\nconst PREV = \"prev\";\r\nconst NEXT = \"next\";\r\n\r\n/*\r\n ******************************************************\r\n ***** Class Definition                           *****\r\n ******************************************************\r\n */\r\n\r\nclass carousel \r\n{\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.items = element.children; // Carousel items\r\n        this.length = element.children.length;\r\n        this.index = 0; // Internal Pointer\r\n        this.duration = 10000; // Carousel duration time in miliseconds\r\n        this.ACTIVE_CLASSNAME = \"active\";\r\n        this.special_carousels = ['head-carousel']; // special carousels\r\n    }\r\n\r\n    // Public methods\r\n\r\n    start() {\r\n        this._slide(NEXT);\r\n        // setInterval(() => {\r\n        //     this._slide(NEXT);\r\n        // }, this.duration);\r\n    }\r\n\r\n    prev() {\r\n        this._slide(PREV);\r\n    }\r\n\r\n    next() {\r\n        this._slide(NEXT);\r\n    }\r\n\r\n    // Private methods\r\n\r\n    _movePointer() {\r\n        this.index = this.index + 1;\r\n    }\r\n\r\n    _slide(element) {\r\n        if(this.index > (this.length - 1)) {\r\n            this.index = 0; \r\n        }\r\n\r\n        let index, activeElement, previousElement;\r\n        let active = this.ACTIVE_CLASSNAME;\r\n        if(this.special_carousels.includes(this.element.id)) {\r\n            this.ACTIVE_CLASSNAME = 'f_active';\r\n            active = this.ACTIVE_CLASSNAME;\r\n        }\r\n\r\n        switch (element) {\r\n            case \"next\":\r\n                for (const item of this.items) {\r\n                    if(item.classList.contains(\"previous\") || item.classList.contains(\"next\")) {\r\n                        break;\r\n                    } else {\r\n                        this.index = this.index + 1; // Moves the pointer by 1\r\n                        index = this.index - 1; // Get the pointer to the active element\r\n                        activeElement = this.items[index];\r\n                        // Get the previous element\r\n                        if(index > 0) \r\n                            previousElement = this.items[index-1]; \r\n                        else if(index <= 0)\r\n                            previousElement = this.items[this.length-1];\r\n\r\n                        activeElement.classList.add(active,\"next\");\r\n                        previousElement.classList.add(\"previous\");   \r\n\r\n                        setTimeout(() => {\r\n                            for (const item of this.items) {\r\n                                item.classList.remove(active,\"previous\",\"next\");\r\n                            }\r\n                            activeElement.classList.add(active);\r\n                            this.index = this.index - 1;\r\n                            // Moves the pointer to the next element\r\n                            this._movePointer();\r\n                        },500);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case \"prev\":\r\n                for (const item of this.items) {\r\n                    if(item.classList.contains(\"previous\") || item.classList.contains(\"next\")) {\r\n                        break;\r\n                    } else {\r\n                        this.index = this.index - 1; // Moves the pointer by 1\r\n                        index = this.index + 1; // Get the pointer to active element\r\n                        activeElement = this.items[index];\r\n                        // Get the previous element\r\n                        if(index > 0) \r\n                            previousElement = this.items[index-1]; \r\n                        else if(index <= 0)\r\n                            previousElement = this.items[this.length-1];\r\n\r\n                        activeElement.classList.add(active,\"next-prev\");\r\n                        previousElement.classList.add(\"previous-next\"); \r\n\r\n                        setTimeout(() => {\r\n                            // Removes the class \"active\" from all items\r\n                            for (const item of this.items) {\r\n                                item.classList.remove(active,\"previous-next\",\"next-prev\");\r\n                            }\r\n                            activeElement.classList.add(active); // Display the item\r\n                            this.index = this.index + 1;\r\n                            // Moves the pointer to the next element\r\n                            this._movePointer();\r\n                        },500);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}","/*\r\n * Timer Countdown Class\r\n */\r\n\r\n/*\r\n ******************************************************\r\n ***** Class Definition                           *****\r\n ******************************************************\r\n */\r\n\r\nclass countdown {\r\n    constructor(element, event_date) {\r\n        this.date = new Date(event_date);\r\n        this.element = element;\r\n    }\r\n\r\n    // Public\r\n\r\n    start() {\r\n        // Starting the timer\r\n        setInterval(() => {\r\n            this._update();\r\n        }, 1000);\r\n    }\r\n\r\n    // Private \r\n\r\n    _diff() {\r\n        // Calculate the difference of time with the current date\r\n        let datediff = new date_diff(this.date);\r\n        return datediff.diff();\r\n    }\r\n\r\n    _update() {\r\n        // Update the timer labels\r\n        let day_label = this.element.children[0].children[1];\r\n        let hour_label = this.element.children[1].children[1];\r\n        let minute_label = this.element.children[2].children[1];\r\n        let second_label = this.element.children[3].children[1];\r\n\r\n        // Get the time difference\r\n        let time_diff = this._diff();\r\n\r\n        if (time_diff) {\r\n            day_label.innerText = time_diff.day;\r\n            hour_label.innerText = time_diff.hour;\r\n            minute_label.innerText = time_diff.minute;\r\n            second_label.innerText = time_diff.second; \r\n        } else {\r\n            day_label.innerText = 0;\r\n            hour_label.innerText = 0;\r\n            minute_label.innerText = 0;\r\n            second_label.innerText = 0;\r\n        }\r\n    }\r\n}","/*\r\n * Date Difference Class\r\n */\r\n\r\n// Constant\r\nconst toSec = 1000;\r\nconst toMin = toSec * 60;\r\nconst toHour = toMin * 60;\r\nconst toDay = toHour * 24;\r\n\r\n/*\r\n ******************************************************\r\n ***** Class Definition                           *****\r\n ******************************************************\r\n */\r\n\r\nclass date_diff {\r\n    constructor(date) {\r\n        this.date = date;\r\n    }\r\n\r\n    done() {\r\n        if (!this.diff()) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    diff() {\r\n        let currentDate = new Date();\r\n        let diff = this.date.getTime() - currentDate.getTime();\r\n\r\n        let time_diff = false;\r\n\r\n        if (diff > 0) {\r\n            // Computation of the time difference\r\n            let day = Math.floor(diff / toDay);\r\n            diff = diff - (day * toDay) // Remove the number of days from the difference.\r\n\r\n            let hour = Math.floor(diff / toHour);\r\n            diff = diff - (hour * toHour); // Remove the number of hours from the difference\r\n\r\n            let minute = Math.floor(diff / toMin);\r\n            diff = diff - (minute * toMin); // Remove the number of minutes from the difference\r\n\r\n            let second = Math.floor(diff / toSec);\r\n\r\n            // Stores the result in an object and is returned by the method\r\n            time_diff = {\r\n                second: second,\r\n                minute: minute,\r\n                hour: hour,\r\n                day: day\r\n            }\r\n        }\r\n\r\n        return time_diff;\r\n    }\r\n}","/**\r\n * FUNCTIONS LIBRARY\r\n * HEADER SECTION FUNCTIONS \r\n *\r\n */\r\n\r\nfunction sticky_header () {\r\n\tlet header = document.querySelector(\"body > header\");\r\n\tlet height = header.clientHeight;\r\n\tif (window.pageYOffset >= height) {\r\n\t\theader.classList.add(\"slidein\",\"scrollState\");\r\n\t} else {\t\r\n\t\theader.classList.remove(\"slidein\",\"scrollState\"); \r\n\t}\r\n}\r\n\r\n/* Mobile nav dropdown function */\r\nfunction drop_menu() {\r\n\tconst menu_links = document.querySelector(\"header div.menu-links\");\r\n\tconst menubtn = document.querySelector(\"header div.menu-wrapper div.menu\");\r\n\r\n\tif(menu_links.classList.contains(\"open\")) {\r\n\t\tmenu_links.classList.remove(\"open\");\r\n\t\tif (document.querySelector(\".user-panel\")) menu_links.removeAttribute(\"style\");\r\n\t} else {\r\n\t\tmenu_links.classList.add(\"open\");\r\n\t\tif (document.querySelector(\".user-panel\")) menu_links.style.top = \"100px\";\r\n\t}\r\n\tmenubtn.classList.toggle(\"open\");\r\n}","/**\r\n * FUNCTIONS LIBRARY\r\n * NICE SELECT CLASS FUNCTIONS \r\n */\r\n\r\n/**\r\n * Opens a nice-select element\r\n * @param {Event} event Event Object\r\n * @param {HTMLElement} niceSelect The HTML nice-select element\r\n */\r\nfunction openSelect(event,niceSelect) {\r\n\t// Closes all open nice select dropdowns\r\n\tconst dropdowns = document.querySelectorAll(\".nice-select .dropdown\");\r\n\tfor (const dropdown of dropdowns) \r\n\t{\r\n\t\tdropdown.classList.remove(\"opened\");\r\n\t}\r\n\t// Removes the class .opened from all nice-selects\r\n\tconst currents = document.querySelectorAll(\".nice-select > span\");\r\n\tfor (const current of currents)\r\n\t{\r\n\t\tcurrent.classList.remove(\"opened\");\r\n\t}\r\n\r\n\t// Open the specific dropdown\r\n\tconst selector = \"#\"+niceSelect+\" .dropdown\";\r\n\tconst dropdown = document.querySelector(selector);\r\n\tdropdown.classList.add(\"opened\");\r\n\r\n\t// Rotates the arrow\r\n\tevent.target.classList.add(\"opened\");\r\n}","/**\r\n * FUNCTIONS LIBRARY\r\n * PROFILE PAGE FUNCTIONS \r\n *\r\n */\r\n\r\nlet interval; // Global variable for setInterval \r\n\r\nfunction openTab(event, tab)\r\n{\r\n    // Function for opening and closure of tabs in profile page\r\n \r\n    let tabcontents, tabcontent, tablinks, tablink;\r\n \r\n    tabcontents = document.getElementsByClassName(\"tabcontent\");\r\n    tablinks = document.getElementsByClassName(\"tablink\");\r\n \r\n    // Hides all tabs\r\n    for (tabcontent of tabcontents)\r\n    {\r\n        tabcontent.style.display = \"none\";\r\n    }\r\n \r\n    // Remove the active class from tab links\r\n    for (tablink of tablinks)\r\n    {\r\n        tablink.classList.remove(\"active\");\r\n    }\r\n \r\n    // Display the current tab and add the active class\r\n    document.getElementById(tab).style.display = \"block\";\r\n    event.currentTarget.parentElement.classList.add(\"active\");\r\n}\r\n\r\nasync function openChatContent(event,userid,senderid)\r\n{\r\n    const chat_users = document.querySelectorAll(\".chatbox .list_users .user\");\r\n    for(let chat_user of chat_users)\r\n        chat_user.classList.remove(\"open\");\r\n\r\n    event.currentTarget.classList.add(\"open\");\r\n\tconst receiver = document.getElementById(\"chat_receiver\");\r\n\treceiver.setAttribute(\"value\",\"\"+userid+\"\");\r\n\r\n    // Update the chats \r\n    updateChatCorrespondent(userid); \r\n    updateChatsArea(userid,senderid);\r\n            \r\n    if(isset(interval))\r\n\t\tclearInterval(interval);\r\n\telse {\r\n        is_typing(receiver.value);\r\n\t\tsetTimeout(is_typing(receiver.value), 10000);\r\n    }\r\n}\r\n\r\nasync function updateChatCorrespondent(userid) \r\n{\r\n    const avatar = document.querySelector(\".chatbox .correspondent_info img\");\r\n    const username = document.getElementById(\"correspondent_name\");\r\n    const status = document.getElementById(\"correspondent_status\");\r\n    // Query strings\r\n    const param1 = `?action=updateAvatar&correspondent=${userid}`;\r\n    const param2 = `?action=updateName&correspondent=${userid}`;\r\n    const param3 = `?action=updateStatus&correspondent=${userid}`;\r\n\r\n    // Update correspondent's avatar\r\n    fetch(`chatAction.php${param1}`)\r\n        .then(response => {\r\n            if(!response.ok) throw new Error(\"Network failure\")\r\n            response.text()\r\n        })\r\n        .then(src => avatar.src = src)\r\n        .catch(reason => console.log(reason));\r\n        \r\n    // Update correspondent's name\r\n    fetch(`chatAction.php${param2}`)\r\n        .then(response => {\r\n            if(!response.ok) throw new Error(\"Network failure\")\r\n            response.text()\r\n        })\r\n        .then(name => username.innerText = name)\r\n        .catch(reason => console.log(reason));\r\n\r\n    // Update correspondent's status\r\n    fetch(`chatAction.php${param3}`)\r\n        .then(response => {\r\n            if(!response.ok) throw new Error(\"Network failure\")\r\n            response.text()\r\n        })\r\n        .then(status => status.innerText = status)\r\n        .catch(reason => console.log(reason));\r\n}\r\n\r\nasync function updateChatsArea(correspondentID,senderID) \r\n{\r\n    const chats = document.querySelector(\"div.chats_area\");\r\n    const param = `?action=updateChats&correspondent=${correspondentID}&sender=${senderID}`;\r\n\r\n    try {\r\n        const updateChats = await fetch(`chatAction.php${param}`);\r\n        if(updateChats.ok) {\r\n            const new_chats = updateChats.text();\r\n            chats.innerHTML = new_chats // updates the chat area to new chats\r\n        }\r\n    } catch (reason) {\r\n        console.log(reason)\r\n    }\r\n}\r\n\r\nasync function send_chat()\r\n{\r\n\tconst chats = document.querySelector(\"div.chats_area\");\r\n\tconst chat_msg = document.getElementById(\"chat_msg\").value;\r\n\tconst send_chat = document.getElementById(\"send_chat\");\r\n\r\n\tif(isset(chat_msg)) {\r\n\t\tconst form = new FormData(send_chat);\r\n\r\n        try {\r\n            const request = new Request(\"chatAction.php\",{\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                credentials: 'same-origin',\r\n                body: form\r\n            });\r\n\r\n            const sendChat = await fetch(request);\r\n            if(sendChat.ok) {\r\n                const newChat = await sendChat.text();\r\n                document.getElementById(\"chat_msg\").value=\"\";\r\n                if(chats.children[0].id == \"chat_alert\") {\r\n                    chats.removeChild(chats.children[0]);\r\n\t\t\t\t    chats.innerHTML += newChat;\r\n                }\r\n                chats.innerHTML += newChat;\r\n            }\r\n        } \r\n        catch (reason) {\r\n            alert(reason);\r\n        }\r\n\t}\r\n}\r\n\r\nasync function refresh_picture(userid) {\r\n\tconst profile_pictures = [document.querySelector(\".user-heading a img\"), document.querySelector(\".user-panel .dropdown-menu img\"), document.querySelector(\".user-panel img\")];\r\n\r\n    const refresh = await fetch(`ProfilePicture.php?refresh=1&userID=${userid}`);\r\n    const new_src = await refresh.text();\r\n    for(const profile_picture of profile_pictures) {\r\n\t\tprofile_picture.src = `/members/profile_pictures/${new_src}.jpg`;\r\n\t}\r\n}\r\n\r\nasync function fetch_users_status() \r\n{\r\n\tconst users = [], times = document.querySelectorAll(\"li.user span.time\");\r\n\tconst statuses = document.querySelectorAll(\"li.user > span\");\r\n    const param = \"?action=fetch_users\";\r\n\r\n\tfor(let x=0; x < (times.length/statuses.length); x++)\r\n\t{\r\n\t\tfor(let y=0; y < statuses.length; y++)\r\n\t\t{\r\n\t\t\tlet user_block = [times[x],statuses[y]];\r\n\t\t\tusers.push(user_block);\r\n\t\t}\r\n\t}\r\n\r\n    const statusesUpdate = await fetch(`chatAction.php${param}`);\r\n    const new_statuses = await statusesUpdate.json();\r\n    // displaying the results\r\n    for(let j=0; j<users.length; j++) \r\n\t{\r\n\t\tfor(let i=0; i<new_statuses.length; i++) \r\n\t\t{\r\n\t\t\tif(j == results[i].n)\r\n\t\t\t{\r\n\t\t\t\tusers[j][0].innerHTML = new_statuses[i].last_seen;\r\n\t\t\t\tusers[j][1].className = `status ${new_statuses[i].status}`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction update_last_activity() \r\n{\r\n    fetch(`chatAction.php?action=updateLastActivity`);\r\n}\r\n\r\nasync function is_typing(correspondent) \r\n{\r\n\tconst status = document.getElementById(\"correspondent_status\");\r\n    const param = `?action=is_typing&correspondent=${correspondent}`;\r\n\r\n    try {\r\n        const isTyping = await fetch(`chatAction.php${param}`);\r\n        if (isTyping.ok) {\r\n            const typing_status = await isTyping.text();\r\n            status.innerText = typing_status;\r\n        }\r\n    } catch(reason) {\r\n        console.log(reason);\r\n    }\r\n}\r\n\r\nfunction typing(n) \r\n{\r\n    let param = \"?action=\";\r\n    switch (n) {\r\n        case 1: \r\n            param += \"typing\";\r\n            break;\r\n        case 0: \r\n            param += \"not_typing\";\r\n            break;\r\n    }\r\n    // sends the fetch request\r\n    fetch(`chatAction.php${param}`);\r\n}\r\n\r\nfunction updateProfile(event, form) {\r\n    const inputs = form.querySelectorAll(\"div > input\");\r\n    const selectedInputs = [];\r\n    for (const element of inputs) {\r\n        if (element.disabled) continue;\r\n        selectedInputs.push(element);\r\n    }\r\n    selectedInputs.push(form.querySelector(\"div > textarea\"));\r\n\r\n    let validity = false;\r\n    for (const element of selectedInputs) {\r\n        if (element.type == \"text\" && isset(element.value)) {\r\n            validity = validity || validateText(element.value, 4);\r\n        }\r\n        if (element.type == \"number\" && isset(element.value)) {\r\n            validity = validity || validatePhone(element.value);\r\n        }\r\n        if (element.type == \"textarea\" && isset(element.value)) {\r\n            validity = validity || (element.value >= 50);\r\n        }\r\n    }\r\n    if (!validity) {\r\n        event.preventDefault();\r\n        console.log(validity);\r\n        console.log(selectedInputs);\r\n    }\r\n}","/**\r\n * FUNCTIONS LIBRARY\r\n * MISCELLANEOUS FUNCTIONS\r\n */\r\n\r\nfunction gotop() {\r\n\twindow.scrollTo({\r\n\t\ttop: \"0px\",\r\n\t\tleft: \"0px\",\r\n\t\tbehavior: \"smooth\"\r\n\t})\r\n}\r\n\r\n/**\r\n * Fades out gradually an element\r\n * @param {HTMLElement} elem The HTML element\r\n * @param {number} ms Time in milliseconds\r\n */\r\nfunction fadeOut(elem, ms) {\r\n\tif(!elem)\r\n\t{ return null }\r\n  \tif(ms) {\r\n    \tlet opacity = 1;\r\n    \tlet timer = setInterval(() => {\r\n     \t\topacity -= 50 / ms;\r\n      \t\tif(opacity <= 0)\r\n      \t\t{\r\n        \t\tclearInterval(timer);\r\n        \t\topacity = 0;\r\n\t\t\t\tdocument.body.removeChild(elem);\r\n      \t\t}\r\n      \t\telem.style.opacity = opacity;\r\n      \t\telem.style.filter = \"alpha(opacity=\" + opacity * 100 + \")\";\r\n    \t},50);\r\n  \t}\r\n  \telse\r\n  \t{\r\n    \telem.style.opacity = 0;\r\n    \telem.style.filter = \"alpha(opacity=0)\";\r\n    \telem.style.display = \"none\";\r\n   \t\telem.style.visibility = \"hidden\";\r\n  \t}\r\n}\r\n\r\n/**\r\n * Activates all existings carousels\r\n */\r\n function start_carousels () {\r\n\tlet carousel_prev, carousel_next, slides; \r\n\tif(slides = document.querySelectorAll(\".carousel\")) {\r\n\t\tfor (const slide of slides) {\r\n\t\t\tconst id = slide.id;\r\n\t\t\tlet slideItem = new carousel(slide);\r\n\t\t\tslideItem.start();\r\n\r\n\t\t\tif((carousel_prev = document.querySelectorAll(\"#\"+id+\" + .carousel-nav [data-ride='prev']\")) && (carousel_next = document.querySelectorAll(\"#\"+id+\" + .carousel-nav [data-ride='next']\")))\r\n\t\t\t{\r\n\t\t\t\tfor (const prev of carousel_prev) {\r\n\t\t\t\t\tprev.addEventListener(\"click\", () => {\r\n\t\t\t\t\t\tslideItem.prev();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const next of carousel_next) {\r\n\t\t\t\t\tnext.addEventListener(\"click\", () => {\r\n\t\t\t\t\t\tslideItem.next();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Toggles blur backgrounds open\r\n * @param {string} id Blurred background's ID\r\n */\r\nfunction toggle_visibility(id) {\r\n\tconst elem = document.getElementById(id);\r\n\tconst child = elem.firstElementChild;\r\n\tlet display = elem.style.display;\r\n\tif (display == \"flex\") {\r\n\t\tchild.classList.remove(\"open\");\r\n\t\tsetTimeout(() => elem.removeAttribute(\"style\"), 300);\r\n\t}\r\n\telse {\r\n\t\telem.style.display = \"flex\";\r\n\t\tsetTimeout(() => child.classList.add(\"open\"),100); \r\n\t}\r\n}\r\n\r\n/**\r\n * Toggle the state of chat users panel: open or closed\r\n */\r\nfunction toggleOpen() {\r\n\tconst user_panel = document.querySelector(\"div.chatbox div.chat_users\");\r\n\tconst menubtn = document.querySelector(\"div.chatbox div.menu-wrapper div.menu\");\r\n\tconst chats_section = user_panel.nextElementSibling;\r\n\r\n\tif(user_panel.classList.contains(\"open\")) {\r\n\t\tuser_panel.classList.remove(\"open\");\r\n\t\tsetTimeout(() => {\r\n\t\t\tchats_section.removeAttribute(\"style\");\r\n\t\t}, 500);\r\n\t}\r\n\telse {\r\n\t\tuser_panel.classList.add(\"open\");\r\n\t\tchats_section.style.width = \"60%\";\r\n\t}\r\n\tmenubtn.classList.toggle(\"open\");\r\n}\r\n\r\n/**\r\n * Starts all countdowns of events\r\n */\r\nfunction start_countdowns() {\r\n\tlet countdowns = document.querySelectorAll(\".timer\");\r\n\tfor (const t_countdown of countdowns) {\r\n        let date = t_countdown.getAttribute(\"data-date\");\r\n        // Initialization of an instance of the countdown\r\n\t\tlet time_countdown = new countdown(t_countdown, date);\r\n        time_countdown.start();\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks the existence of a variable.\r\n * @param {any} variable \r\n * @returns Either true or false\r\n */\r\nfunction isset(variable) {\r\n\t// Determines if a variable is set to a value\r\n\treturn (typeof variable == 'undefined') || variable === null || variable.length == 0 ? false : true; \r\n}\r\n\r\n/**\r\n * Creates a new element\r\n * @param {string} type Element's tag name\r\n * @param {string} class_list Element's class list\r\n * @param {string} innertext Element's text content\r\n * @returns The created element\r\n */\r\nfunction element(type, class_list = NULL, innertext) {\r\n\t// Generates a new document element\r\n\tlet element = document.createElement(type);\r\n\telement.classList.value = class_list;\r\n\telement.innerText = innertext;\r\n\treturn element;\r\n}\r\n","/**\r\n * FUNCTIONS LIBRARY\r\n * VALIDATION FUNCTIONS \r\n */\r\n\r\n/**\r\n * Verifies email addresses\r\n * @param {string} email Email to be checked \r\n * @returns {boolean} validity\r\n */\r\nfunction validateEmail(email) {\r\n\tlet validity;\r\n\tconst mail_format = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\t// If email input is a real email address\r\n\tif (email.match(mail_format)) validity = true;\r\n\telse validity = false;\r\n\treturn validity;\r\n}\r\n\r\n/**\r\n * Verifies passwords\r\n * @param {string} password Password\r\n * @returns {boolean} Either True or False\r\n */\r\nfunction validatePassword(password) {\r\n\tlet validity;\r\n\tif (/\\w{8}/.test(password)) validity = true;\r\n\telse validity = false;\r\n\treturn validity;\r\n}\r\n\r\n/**\r\n * Verifies that a string \"name\" has \"n\" minimum number of characters\r\n * @param {string} name Name or Username\r\n * @param {number} n Number of characters\r\n * @returns {boolean}\r\n */\r\nfunction validateText(name, n) {\r\n\tlet validity;\r\n\tlet regexp = new RegExp(\"\\\\w{\" + n + \"}\");\r\n\tif (regexp.test(name)) validity = true;\r\n\telse validity = false;\r\n\treturn validity;\r\n}\r\n\r\n/**\r\n * Verifies that the textarea content has not more than 50 words\r\n * @param {string} text Textarea content\r\n * @returns {boolean} Either True or False\r\n */\r\nfunction validateTextArea(text) {\r\n\tconst words = text.split(\" \");\r\n\tconst word_length = words.length;\r\n\tif (word_length > 50) validity = false;\r\n\telse validity = true;\r\n\treturn validity;\r\n}\r\n\r\n/**\r\n * Verifies that the phone number has exactly 9 digits\r\n * @param {number} phone_number Phone number\r\n * @returns {boolean} Either True or False\r\n */\r\nfunction validatePhone(phone_number) {\r\n\tif (/^\\d{9}$/.test(phone_number)) validity = true;\r\n\telse validity = false;\r\n\treturn validity;\r\n}\r\n\r\n// Fetching valid countries from the json file\r\nlet valid_countries;\r\nif (/^\\/members\\/(register|profile){1}\\.(html|php){1}$/.test(window.location.pathname)) {\r\n\tfetch(\"/static/database/valid_countries.json\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(json => {\r\n\t\t\tvalid_countries = json.valid_countries;\r\n\t\t})\r\n\t\t.catch(reason => console.log(reason));\r\n}\r\n\r\n/**\r\n * Verifies that the country inputted is an existing country \r\n * @param {string} country Country name\r\n * @returns {boolean} Either True or False\r\n */\r\nfunction validateCountry(country) {\r\n\tlet validity = false;\r\n\tlet escaped = country.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\r\n\tconst regexp = new RegExp(\"\\\\b\" + escaped + \"\\\\b\", \"i\");\r\n\tfor (let i = 0; i < valid_countries.length; i++) {\r\n\t\tif (valid_countries[i].match(regexp)) {\r\n\t\t\tvalidity = true;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn validity;\r\n}\r\n\r\nfunction validateSignUp(formData, formId) {\r\n\tlet msg = [];\r\n\tconst formIds = [\"register-form\", \"updateProfile\"];\r\n\t// In case of passwords mismatch\r\n\tif (formId == formIds[0] && formData.passwords[0].value !== formData.passwords[1].value) msg.push(\"Passwords mismatched\");\r\n\t// In case of invalid username or names\r\n\tif (!(validateText(formData.textInputs[0].value, 4) && validateText(formData.textInputs[1].value, 4) && validateText(formData.textInputs[2].value, 4))) msg.push(\"Invalid names or username\");\r\n\t// In case of invalid city names\r\n\tif (!(validateText(formData.textInputs[3].value, 5))) msg.push(\"Invalid city name\");\r\n\treturn msg.length > 0 ? msg : null;\r\n}"]}
