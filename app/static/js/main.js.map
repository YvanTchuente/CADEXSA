{"version":3,"sources":["carousel.js","countdown.js","date_diff.js","functions_library.js"],"names":["PREV","NEXT","carousel","constructor","element","this","items","children","length","index","ACTIVE_CLASSNAME","special_carousels","start","_slide","setInterval","prev","next","_movePointer","activeElement","active","includes","id","item","classList","remove","add","countdown","event_date","date","Date","_update","_diff","datediff","date_diff","diff","day_label","hour_label","minute_label","second_label","time_diff","innerText","day","hour","minute","second","toSec","toMin","toHour","toDay","currentDate","getTime","Math","floor","gotop","window","scrollTo","top","left","behavior","fadeOut","elem","ms","opacity","timer","clearInterval","style","display","visibility","filter","sticky_header","header","document","querySelector","height","clientHeight","pageYOffset","position","boxShadow","start_carousels","carousel_prev","carousel_next","slides","querySelectorAll","slide","slideItem","addEventListener","openTab","event","tab","tabcontents","tabcontent","tablinks","tablink","getElementsByClassName","getElementById","currentTarget","parentElement","openSelect","niceSelect","dropdown","current","target","toggle_visibility","nav_drop","mlinks","bar","bar1","bar2","bar3","bars","contains","transform","bottom","start_timers","getAttribute","time_countdown","onload","dropbtn","onclick","matches","icon","$","click","value","html","removeClass","addClass","removeAttr","attr","selected","passwrd","confirm_passwrd","keypress","val","password_btn","type","password_btn1","counters","forEach","counter","updateCount","count","ceil","setTimeout","accordions","accordion"],"mappings":"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","file":"main.js","sourcesContent":["/*\r\n * Carousel Class\r\n */\r\n\r\n// Constants\r\nconst PREV = \"prev\";\r\nconst NEXT = \"next\";\r\n\r\n/*\r\n ******************************************************\r\n ***** Class Definition                           *****\r\n ******************************************************\r\n */\r\n\r\nclass carousel \r\n{\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.items = element.children; // Carousel items\r\n        this.length = element.children.length;\r\n        this.index = 0; // Internal Pointer\r\n        this.ACTIVE_CLASSNAME = \"active\";\r\n        this.special_carousels = ['head-carousel']; // special carousels\r\n    }\r\n\r\n    // Public methods\r\n\r\n    start() {\r\n        this._slide(NEXT);\r\n        setInterval(() => {\r\n            this._slide(NEXT);\r\n        }, 15000);\r\n    }\r\n\r\n    prev() {\r\n        this._slide(PREV);\r\n    }\r\n\r\n    next() {\r\n        this._slide(NEXT);\r\n    }\r\n\r\n    // Private methods\r\n\r\n    _movePointer() {\r\n        this.index = this.index + 1;\r\n    }\r\n\r\n    _slide(element) {\r\n        if(this.index > (this.length - 1)) {\r\n            this.index = 0; \r\n        }\r\n\r\n        let index, activeElement;\r\n        let active = this.ACTIVE_CLASSNAME;\r\n        if(this.special_carousels.includes(this.element.id)) {\r\n            this.ACTIVE_CLASSNAME = 'f_active';\r\n            active = this.ACTIVE_CLASSNAME;\r\n        }\r\n\r\n        switch (element)\r\n        {\r\n            case \"next\":\r\n                this.index = this.index + 1; // Moves the pointer by 1\r\n                index = this.index - 1; // Get the pointer\r\n                activeElement = this.items[index];\r\n\r\n                for (const item of this.items) {\r\n                    item.classList.remove(active);\r\n                }\r\n\r\n                activeElement.classList.add(active); // Display the item\r\n                this.index = this.index - 1;\r\n                // Moves the pointer to the next element\r\n                this._movePointer(NEXT);\r\n                break;\r\n            case \"prev\":\r\n                this.index = this.index - 1; // Moves the pointer by 1\r\n                index = this.index + 1; // Get the pointer\r\n                activeElement = this.items[index];\r\n\r\n                for (const item of this.items) {\r\n                    item.classList.remove(active);\r\n                }\r\n\r\n                activeElement.classList.add(active); // Display the item\r\n                this.index = this.index + 1;\r\n                // Moves the pointer to the next element\r\n                this._movePointer(NEXT);\r\n                break;\r\n        }\r\n    }\r\n}","/*\r\n * Timer Countdown Class\r\n */\r\n\r\n/*\r\n ******************************************************\r\n ***** Class Definition                           *****\r\n ******************************************************\r\n */\r\n\r\nclass countdown {\r\n    constructor(element, event_date) {\r\n        this.date = new Date(event_date);\r\n        this.element = element;\r\n    }\r\n\r\n    // Public\r\n\r\n    start() {\r\n        // Starting the timer\r\n        setInterval(() => {\r\n            this._update();\r\n        }, 1000);\r\n    }\r\n\r\n    // Private \r\n\r\n    _diff() {\r\n        // Calculate the difference of time with the current date\r\n        let datediff = new date_diff(this.date);\r\n        return datediff.diff();\r\n    }\r\n\r\n    _update() {\r\n        // Update the timer labels\r\n        let day_label = this.element.children[0].children[1];\r\n        let hour_label = this.element.children[1].children[1];\r\n        let minute_label = this.element.children[2].children[1];\r\n        let second_label = this.element.children[3].children[1];\r\n\r\n        // Get the time difference\r\n        let time_diff = this._diff();\r\n\r\n        day_label.innerText = time_diff.day;\r\n        hour_label.innerText = time_diff.hour;\r\n        minute_label.innerText = time_diff.minute;\r\n        second_label.innerText = time_diff.second;\r\n    }\r\n}","/*\r\n * Date Difference Class\r\n */\r\n\r\n// Constant\r\nconst toSec = 1000;\r\nconst toMin = toSec * 60;\r\nconst toHour = toMin * 60;\r\nconst toDay = toHour * 24;\r\n\r\n/*\r\n ******************************************************\r\n ***** Class Definition                           *****\r\n ******************************************************\r\n */\r\n\r\nclass date_diff {\r\n    constructor(date) {\r\n        this.date = date;\r\n    }\r\n\r\n    diff() {\r\n        let currentDate = new Date();\r\n        let diff = this.date.getTime() - currentDate.getTime();\r\n\r\n        // Computation of the time difference\r\n        let day = Math.floor(diff / toDay);\r\n        diff = diff - (day * toDay) // Remove the number of days from the difference.\r\n\r\n        let hour = Math.floor(diff / toHour);\r\n        diff = diff - (hour * toHour); // Remove the number of hours from the difference\r\n\r\n        let minute = Math.floor(diff / toMin);\r\n        diff = diff - (minute * toMin); // Remove the number of minutes from the difference\r\n\r\n        let second = Math.floor(diff / toSec);\r\n\r\n        // Stores the result in an object and is returned by the method\r\n        let time_diff = {\r\n            second: second,\r\n            minute: minute,\r\n            hour: hour,\r\n            day: day\r\n        }\r\n        return time_diff;\r\n    }\r\n}","function gotop() {\r\n\twindow.scrollTo({\r\n\t\ttop: \"0px\",\r\n\t\tleft: \"0px\",\r\n\t\tbehavior: \"smooth\"\r\n\t})\r\n}\r\n\r\nfunction fadeOut(elem, ms)\r\n{\r\n  \tif(!elem)\r\n\t{ return; }\r\n\r\n  \tif(ms) {\r\n    \tlet opacity = 1;\r\n    \tlet timer = setInterval( function() {\r\n     \t\topacity -= 50 / ms;\r\n      \t\tif( opacity <= 0 )\r\n      \t\t{\r\n        \t\tclearInterval(timer);\r\n        \t\topacity = 0;\r\n        \t\telem.style.display = \"none\";\r\n        \t\telem.style.visibility = \"hidden\";\r\n      \t\t}\r\n      \t\telem.style.opacity = opacity;\r\n      \t\telem.style.filter = \"alpha(opacity=\" + opacity * 100 + \")\";\r\n    \t}, 50 );\r\n  \t}\r\n  \telse\r\n  \t{\r\n    \telem.style.opacity = 0;\r\n    \telem.style.filter = \"alpha(opacity=0)\";\r\n    \telem.style.display = \"none\";\r\n   \t\telem.style.visibility = \"hidden\";\r\n  \t}\r\n}\r\n\r\nfunction sticky_header () {\r\n\tlet header = document.querySelector(\"body > header\");\r\n\tlet height = header.clientHeight;\r\n\tif (window.pageYOffset >= height) {\r\n\t\theader.style.position = \"fixed\"\r\n\t\theader.style.top = \"0\";\r\n\t\theader.style.left = \"0\";\t\r\n\t\theader.style.boxShadow = \"0px 5px 10px rgba(0,0,0,25%)\";\r\n\t\theader.classList.add(\"slidein\");\r\n\t}\r\n\telse \r\n\t{\t\r\n\t\theader.style = \"\";\r\n\t\theader.classList.remove(\"slidein\"); \r\n\t}\r\n}\r\n\r\nfunction start_carousels () {\r\n\tlet carousel_prev, carousel_next, slides; \r\n\tif(slides = document.querySelectorAll(\".carousel\")) {\r\n\t\tfor (const slide of slides) {\r\n\t\t\tconst id = slide.id;\r\n\t\t\tlet slideItem = new carousel(slide);\r\n\t\t\tslideItem.start();\r\n\r\n\t\t\tif((carousel_prev = document.querySelectorAll(\"#\"+id+\" + .carousel-nav [data-ride='prev']\")) && (carousel_next = document.querySelectorAll(\"#\"+id+\" + .carousel-nav [data-ride='next']\")))\r\n\t\t\t{\r\n\t\t\t\tfor (const prev of carousel_prev) {\r\n\t\t\t\t\tprev.addEventListener(\"click\", () => {\r\n\t\t\t\t\t\tslideItem.prev();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const next of carousel_next) {\r\n\t\t\t\t\tnext.addEventListener(\"click\", () => {\r\n\t\t\t\t\t\tslideItem.next();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction openTab(event, tab)\r\n{\r\n\t// Function for opening and closure of tabs in profile page\r\n\r\n\tlet tabcontents, tabcontent, tablinks, tablink;\r\n\r\n\ttabcontents = document.getElementsByClassName(\"tabcontent\");\r\n\ttablinks = document.getElementsByClassName(\"tablink\");\r\n\r\n\t// Hides all tabs\r\n\tfor (tabcontent of tabcontents)\r\n\t{\r\n\t\ttabcontent.style.display = \"none\";\r\n\t}\r\n\r\n\t// Remove the active class from tab links\r\n\tfor (tablink of tablinks)\r\n\t{\r\n\t\ttablink.classList.remove(\"active\");\r\n\t}\r\n\r\n\t// Display the current tab and add the active class\r\n\tdocument.getElementById(tab).style.display = \"block\";\r\n\tevent.currentTarget.parentElement.classList.add(\"active\");\r\n}\r\n\r\n/* JS functions to handle nice-select elements */\r\nfunction openSelect(event,niceSelect) {\r\n\t// Closes all open nice select dropdowns\r\n\tvar dropdowns = document.querySelectorAll(\".nice-select .dropdown\");\r\n\tfor (dropdown of dropdowns) \r\n\t{\r\n\t\tdropdown.style = \"\";\r\n\t}\r\n\t// Removes the class .opened from all nice-selects\r\n\tvar currents = document.querySelectorAll(\".nice-select > [class='current']\");\r\n\tfor (current of currents)\r\n\t{\r\n\t\tcurrent.classList.remove(\"opened\");\r\n\t}\r\n\r\n\t// Open the specific dropdown\r\n\tvar selector = \"#\"+niceSelect+\" .dropdown\";\r\n\tvar dropdown = document.querySelector(selector);\r\n\tdropdown.style.top = \"105%\";\r\n\tdropdown.style.opacity = \"1\";\r\n\tdropdown.style.visibility = \"visible\";\r\n\r\n\t// Rotates the arrow\r\n\tevent.target.classList.add(\"opened\");\r\n}\r\n\r\n// Special function for blur backgrounds\r\nfunction toggle_visibility(id) {\r\n\tvar elem = document.getElementById(id);\r\n\tvar child = elem.querySelector(\"#\"+id+\" .update_profile\");\r\n\tdisplay = elem.style.display;\r\n\tif (display == \"flex\") \r\n\t{\r\n\t\telem.style.display = \"none\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\telem.style.display = \"flex\";\r\n\t}\r\n}\r\n\r\n/* Mobile nav dropdown function */\r\nfunction nav_drop() {\r\n\tvar mlinks = document.getElementsByClassName(\"m-links\")[0];\r\n\tvar menubtn = document.getElementsByClassName(\"m-menu-btn\")[0];\r\n\r\n\t/* Get the bars of the nav icon */\r\n\tlet bar // For use in loops to refer to any bar below\r\n\tlet bar1 = document.querySelector(\".m-menu-btn #menu-bar1\");\r\n\tlet bar2 = document.querySelector(\".m-menu-btn #menu-bar2\");\r\n\tlet bar3 = document.querySelector(\".m-menu-btn #menu-bar3\");\r\n\tlet bars = [bar1, bar2, bar3];\r\n\r\n\tif(mlinks.classList.contains(\"open\")) \r\n\t{\r\n\t\tmlinks.classList.remove(\"open\");\r\n\t\tfor(bar of bars) {\r\n\t\t\tbar.style = \"\";\r\n\t\t}\r\n\t} \r\n\telse \r\n\t{\r\n\t\tmlinks.classList.add(\"open\");\r\n\t\t/*** Animating the menu button ***/\r\n\t\tfor(bar of bars) {\r\n\t\t\tbar.style.position = \"relative\";\r\n\t\t}\r\n\t\tbar1.style.transform = \"rotate(45deg)\"\r\n\t\tbar1.style.bottom = \"-11px\";\r\n\r\n\t\tbar2.style.display = \"none\";\r\n\r\n\t\tbar3.style.transform = \"rotate(-45deg)\"; \r\n\t\tbar3.style.top = \"1px\";\r\n\t}\r\n}\r\n\r\n/* Timers */\r\nfunction start_timers() {\r\n\tlet timers = document.querySelectorAll(\".timer\");\r\n\tfor (const timer of timers) {\r\n        let date = timer.getAttribute(\"data-date\");\r\n        // Initialization of an instance of the countdown\r\n\t\tlet time_countdown = new countdown(timer, date);\r\n        time_countdown.start();\r\n\t}\r\n}"]}